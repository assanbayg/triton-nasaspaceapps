{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1VqvY8TMdd002A3lYXLUIzOA5d6zrPkME","timestamp":1696739350007}],"authorship_tag":"ABX9TyPir1iQ1wMK0wjYVqaAyeWN"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["#import libraries\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","import statsmodels.formula.api as smf\n","from sklearn.linear_model import LinearRegression\n","from sklearn import metrics\n","from sklearn.model_selection import train_test_split\n","\n","%matplotlib inline\n","\n","#set printing options\n","np.set_printoptions(precision=3, suppress=True)"],"metadata":{"id":"3xkTR7PTZtIz","executionInfo":{"status":"ok","timestamp":1696743409182,"user_tz":-360,"elapsed":3963,"user":{"displayName":"hello there","userId":"07463338358590839984"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["#create our dataset (WARNING: The folowing 5 blocks of code, dataframe was made by developer in order to test the algorithm, it's not necessary to execute this)\n","num_rows = 1000\n","dataframe = {\n","    'Temperature': np.random.uniform(15, 45, num_rows),  # Random temperature between 15 and 35 degrees Celsius\n","    'Humidity rate': np.random.uniform(20, 80, num_rows),  # Random humidity rate between 20% and 80%\n","    'Wind speed': np.random.uniform(0, 20, num_rows),  # Random wind speed between 0 and 20 km/h\n","    'Rain': np.random.uniform(0, 100, num_rows),  # Random rain amount in mm\n","    'Fine Fuel Moisture Code': np.random.uniform(0, 100, num_rows),  # Random values for Fine Fuel Moisture Code\n","    'Duff Moisture Code': np.random.uniform(0, 100, num_rows),  # Random values for Duff Moisture Code\n","    'Drought code': np.random.uniform(0, 100, num_rows),  # Random values for Drought code\n","    'Initial Spread Index': np.random.uniform(0, 100, num_rows),  # Random values for Initial Spread Index\n","    'Buildup Index': np.random.uniform(0, 100, num_rows),  # Random values for Buildup Index\n","    'Classes': np.random.choice(['fire', 'not fire'], num_rows)  # Random 'fire' or 'not fire'\n","}\n"],"metadata":{"id":"NcMiozPbkwHg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#'FWI\" is dependent on lot of features, create the column, which will depend on 6 basic features\n","def calculate_fire_weather_index(row):\n","    fwi = row['Temperature'] * 1.2 + row['Humidity rate'] * 0.35 + row['Wind speed'] * 0.5 + row['Initial Spread Index'] * 1.2 + row['Fine Fuel Moisture Code'] * 0.15 + row['Drought code'] * 0.8\n","    return fwi\n","\n","dataframe['Fire Weather Index'] = pd.DataFrame(dataframe).apply(calculate_fire_weather_index, axis=1)\n"],"metadata":{"id":"0CiWtdSdk85u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataf = pd.DataFrame(dataframe) #creating dataframe"],"metadata":{"id":"oEA_MkNzldHb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataf.to_csv('fire_weather2.csv', index=False) #save dataframe as \"fire_weather2.csv\""],"metadata":{"id":"ctDUCiFlli77"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","\n","file_name = 'fire_weather2.csv'\n","\n","files.download(file_name)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"07Vr_6ZOlyhf","executionInfo":{"status":"ok","timestamp":1696707345772,"user_tz":-360,"elapsed":459,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"526311e8-4f3a-4c79-f11b-5a3f1ca61da0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_81b109aa-5099-400e-aa41-759185d1dceb\", \"fire_weather2.csv\", 190059)"]},"metadata":{}}]},{"cell_type":"code","source":["#set column names and read our csv file\n","column_names = ['Temperature', 'RH', 'Ws','Rain','FFMC','DMC','DC','ISI','BUI','Classes','FWI']\n","df= pd.read_csv('/content/fire_weather2.csv', names=column_names,\n","                          na_values='?', comment='\\t',\n","                          sep=',', skipinitialspace=True)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"VygbUtTnDOAt","executionInfo":{"status":"ok","timestamp":1696743411942,"user_tz":-360,"elapsed":356,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"722632f1-4f92-447d-b29e-fd06c97f11fc"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Temperature         RH         Ws       Rain       FFMC        DMC  \\\n","0    42.845668  29.263612   8.881229  18.348868  96.819448  16.247748   \n","1    20.343341  53.376593   4.349430  59.859647  65.468434  62.551260   \n","2    18.529514  39.350866   4.686544  86.220598   8.436846  29.228210   \n","3    23.823670  51.015053  19.459318  35.332508  85.508484  48.311413   \n","4    36.277142  37.408084   8.771013  25.947499  69.063942  30.810324   \n","\n","          DC        ISI        BUI   Classes         FWI  \n","0  92.385876  58.441004  11.802706      fire  224.658503  \n","1  29.845015  17.849402  97.201315  not fire  100.384091  \n","2   9.240779  95.496957  10.992554  not fire  161.605991  \n","3  26.963840  74.416992  70.789403  not fire  179.871066  \n","4   0.030974  24.146981  27.278696  not fire  100.371654  "],"text/html":["\n","  <div id=\"df-a1681865-3edf-4564-a459-83f5772ebdf4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperature</th>\n","      <th>RH</th>\n","      <th>Ws</th>\n","      <th>Rain</th>\n","      <th>FFMC</th>\n","      <th>DMC</th>\n","      <th>DC</th>\n","      <th>ISI</th>\n","      <th>BUI</th>\n","      <th>Classes</th>\n","      <th>FWI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>42.845668</td>\n","      <td>29.263612</td>\n","      <td>8.881229</td>\n","      <td>18.348868</td>\n","      <td>96.819448</td>\n","      <td>16.247748</td>\n","      <td>92.385876</td>\n","      <td>58.441004</td>\n","      <td>11.802706</td>\n","      <td>fire</td>\n","      <td>224.658503</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.343341</td>\n","      <td>53.376593</td>\n","      <td>4.349430</td>\n","      <td>59.859647</td>\n","      <td>65.468434</td>\n","      <td>62.551260</td>\n","      <td>29.845015</td>\n","      <td>17.849402</td>\n","      <td>97.201315</td>\n","      <td>not fire</td>\n","      <td>100.384091</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.529514</td>\n","      <td>39.350866</td>\n","      <td>4.686544</td>\n","      <td>86.220598</td>\n","      <td>8.436846</td>\n","      <td>29.228210</td>\n","      <td>9.240779</td>\n","      <td>95.496957</td>\n","      <td>10.992554</td>\n","      <td>not fire</td>\n","      <td>161.605991</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.823670</td>\n","      <td>51.015053</td>\n","      <td>19.459318</td>\n","      <td>35.332508</td>\n","      <td>85.508484</td>\n","      <td>48.311413</td>\n","      <td>26.963840</td>\n","      <td>74.416992</td>\n","      <td>70.789403</td>\n","      <td>not fire</td>\n","      <td>179.871066</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>36.277142</td>\n","      <td>37.408084</td>\n","      <td>8.771013</td>\n","      <td>25.947499</td>\n","      <td>69.063942</td>\n","      <td>30.810324</td>\n","      <td>0.030974</td>\n","      <td>24.146981</td>\n","      <td>27.278696</td>\n","      <td>not fire</td>\n","      <td>100.371654</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1681865-3edf-4564-a459-83f5772ebdf4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a1681865-3edf-4564-a459-83f5772ebdf4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a1681865-3edf-4564-a459-83f5772ebdf4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-45a8c4f5-eaec-440e-b4af-137453e1b5d3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45a8c4f5-eaec-440e-b4af-137453e1b5d3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-45a8c4f5-eaec-440e-b4af-137453e1b5d3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["#let us get rid of non-numeric values\n","df.isna().sum()\n","data = df.dropna()"],"metadata":{"id":"POlqkWsCZj1K","executionInfo":{"status":"ok","timestamp":1696743417255,"user_tz":-360,"elapsed":415,"user":{"displayName":"hello there","userId":"07463338358590839984"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["data.head() #let's check the head of our dataframe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"u9MmFs6KbAiL","executionInfo":{"status":"ok","timestamp":1696743418315,"user_tz":-360,"elapsed":12,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"bf36fafc-ced8-4c29-a24c-abeee0f865d4"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Temperature         RH         Ws       Rain       FFMC        DMC  \\\n","0    42.845668  29.263612   8.881229  18.348868  96.819448  16.247748   \n","1    20.343341  53.376593   4.349430  59.859647  65.468434  62.551260   \n","2    18.529514  39.350866   4.686544  86.220598   8.436846  29.228210   \n","3    23.823670  51.015053  19.459318  35.332508  85.508484  48.311413   \n","4    36.277142  37.408084   8.771013  25.947499  69.063942  30.810324   \n","\n","          DC        ISI        BUI   Classes         FWI  \n","0  92.385876  58.441004  11.802706      fire  224.658503  \n","1  29.845015  17.849402  97.201315  not fire  100.384091  \n","2   9.240779  95.496957  10.992554  not fire  161.605991  \n","3  26.963840  74.416992  70.789403  not fire  179.871066  \n","4   0.030974  24.146981  27.278696  not fire  100.371654  "],"text/html":["\n","  <div id=\"df-0385162f-61da-44aa-a34b-b7d52d2ee749\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperature</th>\n","      <th>RH</th>\n","      <th>Ws</th>\n","      <th>Rain</th>\n","      <th>FFMC</th>\n","      <th>DMC</th>\n","      <th>DC</th>\n","      <th>ISI</th>\n","      <th>BUI</th>\n","      <th>Classes</th>\n","      <th>FWI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>42.845668</td>\n","      <td>29.263612</td>\n","      <td>8.881229</td>\n","      <td>18.348868</td>\n","      <td>96.819448</td>\n","      <td>16.247748</td>\n","      <td>92.385876</td>\n","      <td>58.441004</td>\n","      <td>11.802706</td>\n","      <td>fire</td>\n","      <td>224.658503</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.343341</td>\n","      <td>53.376593</td>\n","      <td>4.349430</td>\n","      <td>59.859647</td>\n","      <td>65.468434</td>\n","      <td>62.551260</td>\n","      <td>29.845015</td>\n","      <td>17.849402</td>\n","      <td>97.201315</td>\n","      <td>not fire</td>\n","      <td>100.384091</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.529514</td>\n","      <td>39.350866</td>\n","      <td>4.686544</td>\n","      <td>86.220598</td>\n","      <td>8.436846</td>\n","      <td>29.228210</td>\n","      <td>9.240779</td>\n","      <td>95.496957</td>\n","      <td>10.992554</td>\n","      <td>not fire</td>\n","      <td>161.605991</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.823670</td>\n","      <td>51.015053</td>\n","      <td>19.459318</td>\n","      <td>35.332508</td>\n","      <td>85.508484</td>\n","      <td>48.311413</td>\n","      <td>26.963840</td>\n","      <td>74.416992</td>\n","      <td>70.789403</td>\n","      <td>not fire</td>\n","      <td>179.871066</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>36.277142</td>\n","      <td>37.408084</td>\n","      <td>8.771013</td>\n","      <td>25.947499</td>\n","      <td>69.063942</td>\n","      <td>30.810324</td>\n","      <td>0.030974</td>\n","      <td>24.146981</td>\n","      <td>27.278696</td>\n","      <td>not fire</td>\n","      <td>100.371654</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0385162f-61da-44aa-a34b-b7d52d2ee749')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0385162f-61da-44aa-a34b-b7d52d2ee749 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0385162f-61da-44aa-a34b-b7d52d2ee749');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-34b1ffc9-74ee-4381-b5a4-496e187fc40f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34b1ffc9-74ee-4381-b5a4-496e187fc40f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-34b1ffc9-74ee-4381-b5a4-496e187fc40f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data.dtypes #let's check columns data types"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dz_8Xwhinq8r","executionInfo":{"status":"ok","timestamp":1696743420255,"user_tz":-360,"elapsed":438,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"4b5e8310-e7b7-478b-ea1b-519aae2e30d1"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Temperature    float64\n","RH             float64\n","Ws             float64\n","Rain           float64\n","FFMC           float64\n","DMC            float64\n","DC             float64\n","ISI            float64\n","BUI            float64\n","Classes         object\n","FWI            float64\n","dtype: object"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#if we have non-float column, this lines of code will translate all columns to the float datatype\n","import pandas as pd\n","columns_list=['Temperature', 'RH', 'Ws','Rain','FFMC','DMC','DC','ISI','BUI','FWI',]\n","for i in columns_list:\n","  data[i] = pd.to_numeric(data[i], errors='coerce')\n","  non_numeric_rows = data[data[i].isna()]\n","  data = data.dropna(subset=[i])\n","  data[i] = data[i].fillna(0)\n","  data[i] = data[i].astype(float)\n","\n","data.dtypes"],"metadata":{"id":"2IsUPHkKztwM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696743423369,"user_tz":-360,"elapsed":469,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"dd0ea185-e47c-456e-801a-7c4638f69aff"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Temperature    float64\n","RH             float64\n","Ws             float64\n","Rain           float64\n","FFMC           float64\n","DMC            float64\n","DC             float64\n","ISI            float64\n","BUI            float64\n","Classes         object\n","FWI            float64\n","dtype: object"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#data['Classes'] = pd.to_numeric(data['Classes'], errors='coerce')\n","#non_numeric_rows = data[data['Classes'].isna()]\n","#data = data.dropna(subset=['Classes'])\n","#data['Classes'] = data['Classes'].fillna(0)\n","#data['Classes'] = data['Classes'].astype(float)"],"metadata":{"id":"tXvuctjeWCMk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#'CLasses' column is categorical, let's change it to numerical column by sayin that \"not fire\" is 0, and \"fire\" is 1\n","data['Classes'] = np.where(data['Classes'].str.contains(\"not fire\"),0,1)\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"JQmlG1Hqb7vC","executionInfo":{"status":"ok","timestamp":1696743426631,"user_tz":-360,"elapsed":16,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"3d72237b-7407-492e-f9aa-16f6d4ac4e04"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Temperature         RH         Ws       Rain       FFMC        DMC  \\\n","0    42.845668  29.263612   8.881229  18.348868  96.819448  16.247748   \n","1    20.343341  53.376593   4.349430  59.859647  65.468434  62.551260   \n","2    18.529514  39.350866   4.686544  86.220598   8.436846  29.228210   \n","3    23.823670  51.015053  19.459318  35.332508  85.508484  48.311413   \n","4    36.277142  37.408084   8.771013  25.947499  69.063942  30.810324   \n","\n","          DC        ISI        BUI  Classes         FWI  \n","0  92.385876  58.441004  11.802706        1  224.658503  \n","1  29.845015  17.849402  97.201315        0  100.384091  \n","2   9.240779  95.496957  10.992554        0  161.605991  \n","3  26.963840  74.416992  70.789403        0  179.871066  \n","4   0.030974  24.146981  27.278696        0  100.371654  "],"text/html":["\n","  <div id=\"df-9600a86f-809d-4809-ba53-55a8a848e84c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperature</th>\n","      <th>RH</th>\n","      <th>Ws</th>\n","      <th>Rain</th>\n","      <th>FFMC</th>\n","      <th>DMC</th>\n","      <th>DC</th>\n","      <th>ISI</th>\n","      <th>BUI</th>\n","      <th>Classes</th>\n","      <th>FWI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>42.845668</td>\n","      <td>29.263612</td>\n","      <td>8.881229</td>\n","      <td>18.348868</td>\n","      <td>96.819448</td>\n","      <td>16.247748</td>\n","      <td>92.385876</td>\n","      <td>58.441004</td>\n","      <td>11.802706</td>\n","      <td>1</td>\n","      <td>224.658503</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.343341</td>\n","      <td>53.376593</td>\n","      <td>4.349430</td>\n","      <td>59.859647</td>\n","      <td>65.468434</td>\n","      <td>62.551260</td>\n","      <td>29.845015</td>\n","      <td>17.849402</td>\n","      <td>97.201315</td>\n","      <td>0</td>\n","      <td>100.384091</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.529514</td>\n","      <td>39.350866</td>\n","      <td>4.686544</td>\n","      <td>86.220598</td>\n","      <td>8.436846</td>\n","      <td>29.228210</td>\n","      <td>9.240779</td>\n","      <td>95.496957</td>\n","      <td>10.992554</td>\n","      <td>0</td>\n","      <td>161.605991</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.823670</td>\n","      <td>51.015053</td>\n","      <td>19.459318</td>\n","      <td>35.332508</td>\n","      <td>85.508484</td>\n","      <td>48.311413</td>\n","      <td>26.963840</td>\n","      <td>74.416992</td>\n","      <td>70.789403</td>\n","      <td>0</td>\n","      <td>179.871066</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>36.277142</td>\n","      <td>37.408084</td>\n","      <td>8.771013</td>\n","      <td>25.947499</td>\n","      <td>69.063942</td>\n","      <td>30.810324</td>\n","      <td>0.030974</td>\n","      <td>24.146981</td>\n","      <td>27.278696</td>\n","      <td>0</td>\n","      <td>100.371654</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9600a86f-809d-4809-ba53-55a8a848e84c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9600a86f-809d-4809-ba53-55a8a848e84c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9600a86f-809d-4809-ba53-55a8a848e84c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5842d1e3-accc-4372-9af5-32ba363a8e94\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5842d1e3-accc-4372-9af5-32ba363a8e94')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5842d1e3-accc-4372-9af5-32ba363a8e94 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["#dividing out dataset into training and test dataset\n","train_dataset = data.sample(frac=0.8, random_state=0)\n","test_dataset = data.drop(train_dataset.index)"],"metadata":{"id":"AHuIKCs3Z6hT","executionInfo":{"status":"ok","timestamp":1696743429296,"user_tz":-360,"elapsed":407,"user":{"displayName":"hello there","userId":"07463338358590839984"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["#let's choose our independent and dependent values\n","train_features = train_dataset.copy()\n","test_features = test_dataset.copy()\n","\n","train_labels = train_features.pop('FWI')\n","test_labels = test_features.pop('FWI')"],"metadata":{"id":"p4ma48dYecxE","executionInfo":{"status":"ok","timestamp":1696743430076,"user_tz":-360,"elapsed":10,"user":{"displayName":"hello there","userId":"07463338358590839984"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["train_features.corr() #checking correlation between datas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"zODP3aTLsCje","executionInfo":{"status":"ok","timestamp":1696743431453,"user_tz":-360,"elapsed":14,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"93c9f8a2-b354-442c-87a9-9d2a8913cd21"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Temperature        RH        Ws      Rain      FFMC       DMC  \\\n","Temperature     1.000000 -0.012205 -0.029676 -0.074079 -0.037847  0.048588   \n","RH             -0.012205  1.000000  0.030332  0.001752  0.034547 -0.023524   \n","Ws             -0.029676  0.030332  1.000000 -0.036542 -0.031165  0.050652   \n","Rain           -0.074079  0.001752 -0.036542  1.000000  0.022014 -0.089307   \n","FFMC           -0.037847  0.034547 -0.031165  0.022014  1.000000  0.022352   \n","DMC             0.048588 -0.023524  0.050652 -0.089307  0.022352  1.000000   \n","DC              0.017270 -0.002332 -0.041284 -0.037519  0.003790  0.061120   \n","ISI            -0.038234  0.018764 -0.031858  0.032255 -0.036276 -0.021289   \n","BUI            -0.014487  0.045169 -0.015852 -0.025288  0.037611  0.011367   \n","Classes         0.074364  0.017962 -0.040104  0.023905 -0.020990  0.080854   \n","\n","                   DC       ISI       BUI   Classes  \n","Temperature  0.017270 -0.038234 -0.014487  0.074364  \n","RH          -0.002332  0.018764  0.045169  0.017962  \n","Ws          -0.041284 -0.031858 -0.015852 -0.040104  \n","Rain        -0.037519  0.032255 -0.025288  0.023905  \n","FFMC         0.003790 -0.036276  0.037611 -0.020990  \n","DMC          0.061120 -0.021289  0.011367  0.080854  \n","DC           1.000000  0.015870 -0.038869 -0.044302  \n","ISI          0.015870  1.000000  0.001372  0.022930  \n","BUI         -0.038869  0.001372  1.000000 -0.068530  \n","Classes     -0.044302  0.022930 -0.068530  1.000000  "],"text/html":["\n","  <div id=\"df-a5efdd6a-b8ed-4cef-a50e-37704de77df9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperature</th>\n","      <th>RH</th>\n","      <th>Ws</th>\n","      <th>Rain</th>\n","      <th>FFMC</th>\n","      <th>DMC</th>\n","      <th>DC</th>\n","      <th>ISI</th>\n","      <th>BUI</th>\n","      <th>Classes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Temperature</th>\n","      <td>1.000000</td>\n","      <td>-0.012205</td>\n","      <td>-0.029676</td>\n","      <td>-0.074079</td>\n","      <td>-0.037847</td>\n","      <td>0.048588</td>\n","      <td>0.017270</td>\n","      <td>-0.038234</td>\n","      <td>-0.014487</td>\n","      <td>0.074364</td>\n","    </tr>\n","    <tr>\n","      <th>RH</th>\n","      <td>-0.012205</td>\n","      <td>1.000000</td>\n","      <td>0.030332</td>\n","      <td>0.001752</td>\n","      <td>0.034547</td>\n","      <td>-0.023524</td>\n","      <td>-0.002332</td>\n","      <td>0.018764</td>\n","      <td>0.045169</td>\n","      <td>0.017962</td>\n","    </tr>\n","    <tr>\n","      <th>Ws</th>\n","      <td>-0.029676</td>\n","      <td>0.030332</td>\n","      <td>1.000000</td>\n","      <td>-0.036542</td>\n","      <td>-0.031165</td>\n","      <td>0.050652</td>\n","      <td>-0.041284</td>\n","      <td>-0.031858</td>\n","      <td>-0.015852</td>\n","      <td>-0.040104</td>\n","    </tr>\n","    <tr>\n","      <th>Rain</th>\n","      <td>-0.074079</td>\n","      <td>0.001752</td>\n","      <td>-0.036542</td>\n","      <td>1.000000</td>\n","      <td>0.022014</td>\n","      <td>-0.089307</td>\n","      <td>-0.037519</td>\n","      <td>0.032255</td>\n","      <td>-0.025288</td>\n","      <td>0.023905</td>\n","    </tr>\n","    <tr>\n","      <th>FFMC</th>\n","      <td>-0.037847</td>\n","      <td>0.034547</td>\n","      <td>-0.031165</td>\n","      <td>0.022014</td>\n","      <td>1.000000</td>\n","      <td>0.022352</td>\n","      <td>0.003790</td>\n","      <td>-0.036276</td>\n","      <td>0.037611</td>\n","      <td>-0.020990</td>\n","    </tr>\n","    <tr>\n","      <th>DMC</th>\n","      <td>0.048588</td>\n","      <td>-0.023524</td>\n","      <td>0.050652</td>\n","      <td>-0.089307</td>\n","      <td>0.022352</td>\n","      <td>1.000000</td>\n","      <td>0.061120</td>\n","      <td>-0.021289</td>\n","      <td>0.011367</td>\n","      <td>0.080854</td>\n","    </tr>\n","    <tr>\n","      <th>DC</th>\n","      <td>0.017270</td>\n","      <td>-0.002332</td>\n","      <td>-0.041284</td>\n","      <td>-0.037519</td>\n","      <td>0.003790</td>\n","      <td>0.061120</td>\n","      <td>1.000000</td>\n","      <td>0.015870</td>\n","      <td>-0.038869</td>\n","      <td>-0.044302</td>\n","    </tr>\n","    <tr>\n","      <th>ISI</th>\n","      <td>-0.038234</td>\n","      <td>0.018764</td>\n","      <td>-0.031858</td>\n","      <td>0.032255</td>\n","      <td>-0.036276</td>\n","      <td>-0.021289</td>\n","      <td>0.015870</td>\n","      <td>1.000000</td>\n","      <td>0.001372</td>\n","      <td>0.022930</td>\n","    </tr>\n","    <tr>\n","      <th>BUI</th>\n","      <td>-0.014487</td>\n","      <td>0.045169</td>\n","      <td>-0.015852</td>\n","      <td>-0.025288</td>\n","      <td>0.037611</td>\n","      <td>0.011367</td>\n","      <td>-0.038869</td>\n","      <td>0.001372</td>\n","      <td>1.000000</td>\n","      <td>-0.068530</td>\n","    </tr>\n","    <tr>\n","      <th>Classes</th>\n","      <td>0.074364</td>\n","      <td>0.017962</td>\n","      <td>-0.040104</td>\n","      <td>0.023905</td>\n","      <td>-0.020990</td>\n","      <td>0.080854</td>\n","      <td>-0.044302</td>\n","      <td>0.022930</td>\n","      <td>-0.068530</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5efdd6a-b8ed-4cef-a50e-37704de77df9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a5efdd6a-b8ed-4cef-a50e-37704de77df9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a5efdd6a-b8ed-4cef-a50e-37704de77df9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-48315188-a6e6-4f2f-b208-d6afca014459\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-48315188-a6e6-4f2f-b208-d6afca014459')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-48315188-a6e6-4f2f-b208-d6afca014459 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#checking for the multicollinearity\n","plt.figure(figsize=(12,10))\n","corr=train_features.corr()\n","sns.heatmap(corr,annot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":854},"id":"l-cDxuon3PEU","executionInfo":{"status":"ok","timestamp":1696743436251,"user_tz":-360,"elapsed":939,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"127d0de4-fd30-42b2-8af9-90c0d2097017"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["def correlation(dataset, threshold):\n","    col_corr = set()\n","    corr_matrix = dataset.corr()\n","    for i in range(len(corr_matrix.columns)):\n","        for j in range(i):\n","            if abs(corr_matrix.iloc[i, j]) > threshold:\n","                colname = corr_matrix.columns[i]\n","                col_corr.add(colname)\n","    return col_corr"],"metadata":{"id":"yCBkA3Ew3yWw","executionInfo":{"status":"ok","timestamp":1696743439674,"user_tz":-360,"elapsed":321,"user":{"displayName":"hello there","userId":"07463338358590839984"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["corr_features=correlation(train_features,0.85) #Thresholding, let's check if we have datas that correlated with each other very strong"],"metadata":{"id":"9z-YL4ov37t4","executionInfo":{"status":"ok","timestamp":1696743441171,"user_tz":-360,"elapsed":307,"user":{"displayName":"hello there","userId":"07463338358590839984"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["NOTE FOR PREVIOUS CODE: IF datas correlatd with each other extremely strong, it will lead to decrease of accuracy of our model, because they could redundant in our code"],"metadata":{"id":"Is75qnSQaYM0"}},{"cell_type":"code","source":["corr_features #checking if we have strong correlated datas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WYZkP441THUO","executionInfo":{"status":"ok","timestamp":1696743442824,"user_tz":-360,"elapsed":10,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"66698b9e-95fb-4d69-d762-38731e9f3e41"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["set()"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["print(train_features.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t1qKNN997zMF","executionInfo":{"status":"ok","timestamp":1696707464164,"user_tz":-360,"elapsed":426,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"20c0fbff-c3fa-4061-d3f5-22d584c025f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Temperature', 'RH', 'Ws', 'Rain', 'FFMC', 'DMC', 'DC', 'ISI', 'BUI',\n","       'Classes'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["#if we have that kind of datas we will remove one of the column from these features in order to avoid multicollinearuity\n","train_features.drop(columns = corr_features, axis = 1, inplace=True)\n","test_features.drop(columns = corr_features,axis = 1, inplace=True)\n","train_features.shape\n","test_features.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s7NjDb-f4VDc","executionInfo":{"status":"ok","timestamp":1696707083846,"user_tz":-360,"elapsed":476,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"eec109ee-1c9d-49b1-dd00-7d36f300721d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7000, 10)"]},"metadata":{},"execution_count":188}]},{"cell_type":"code","source":["#Feature scaling\n","from sklearn.preprocessing import StandardScaler\n","scaler=StandardScaler()\n","train_features_scaled=scaler.fit_transform(train_features)\n","test_features_scaled=scaler.transform(test_features)"],"metadata":{"id":"FBE4lzcS8qIw","executionInfo":{"status":"ok","timestamp":1696743447970,"user_tz":-360,"elapsed":5,"user":{"displayName":"hello there","userId":"07463338358590839984"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["train_features_scaled"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4qsWqrVx9BRw","executionInfo":{"status":"ok","timestamp":1696743449523,"user_tz":-360,"elapsed":8,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"1a0ba976-488f-465b-bb24-5c27d28873ca"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-1.087,  0.427, -0.331, ..., -1.02 ,  1.078, -0.944],\n","       [-1.114,  1.161,  1.352, ...,  0.939, -0.453, -0.944],\n","       [ 1.566, -1.052, -1.169, ...,  0.595,  1.354,  1.059],\n","       ...,\n","       [ 0.075, -0.484,  0.03 , ...,  0.66 ,  0.736,  1.059],\n","       [ 1.699, -0.188, -1.29 , ..., -0.404, -0.3  ,  1.059],\n","       [-1.554,  0.078,  1.137, ..., -0.005,  0.279,  1.059]])"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#checking on which values our label is dependent\n","lm1 = smf.ols(formula='FWI ~ RH + Temperature + Ws + DC + ISI + BUI + FFMC + Rain + DMC', data=data).fit()\n","lm1.params"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"whbHlzCh9D-w","executionInfo":{"status":"ok","timestamp":1696743452078,"user_tz":-360,"elapsed":394,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"a403734c-c24d-4fba-a7fe-a1f997bc1982"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Intercept      3.552714e-14\n","RH             3.500000e-01\n","Temperature    1.200000e+00\n","Ws             5.000000e-01\n","DC             8.000000e-01\n","ISI            1.200000e+00\n","BUI           -1.110223e-15\n","FFMC           1.500000e-01\n","Rain           1.318390e-15\n","DMC           -4.093947e-16\n","dtype: float64"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["#Finding coefficients\n","feature_cols = ['RH', 'Rain', 'Temperature', 'Ws', 'DC', 'ISI', 'BUI', 'FFMC', 'DMC']\n","X = data[feature_cols]\n","y = data['FWI']\n","\n","\n","lm2 = LinearRegression()\n","lm2.fit(X, y)\n","\n","\n","print(lm2.intercept_)\n","print(lm2.coef_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hcstL1P1BYaZ","executionInfo":{"status":"ok","timestamp":1696743453916,"user_tz":-360,"elapsed":7,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"955bd541-07c5-42f4-a503-d72769acb504"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["5.684341886080802e-14\n","[ 0.35  0.    1.2   0.5   0.8   1.2  -0.    0.15 -0.  ]\n"]}]},{"cell_type":"code","source":["list(zip(feature_cols, lm2.coef_)) #let's pair feature names with coefficients"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k-PODLbdCGn4","executionInfo":{"status":"ok","timestamp":1696743455158,"user_tz":-360,"elapsed":8,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"a29f1e42-0ce5-4df0-b951-fd152d530f0c"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('RH', 0.3500000000000001),\n"," ('Rain', 5.828670879282072e-16),\n"," ('Temperature', 1.1999999999999997),\n"," ('Ws', 0.4999999999999996),\n"," ('DC', 0.7999999999999989),\n"," ('ISI', 1.1999999999999997),\n"," ('BUI', -2.914335439641036e-16),\n"," ('FFMC', 0.15000000000000052),\n"," ('DMC', -2.7755575615628914e-17)]"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["lm1.summary() #let's see the overall information"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":616},"id":"rKg7dZ40CiDB","executionInfo":{"status":"ok","timestamp":1696743456624,"user_tz":-360,"elapsed":9,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"a01cb2be-f2fe-4303-d5f6-1cfa45129579"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                    FWI   R-squared:                       1.000\n","Model:                            OLS   Adj. R-squared:                  1.000\n","Method:                 Least Squares   F-statistic:                 5.307e+31\n","Date:                Sun, 08 Oct 2023   Prob (F-statistic):               0.00\n","Time:                        05:37:37   Log-Likelihood:                 28959.\n","No. Observations:                1000   AIC:                        -5.790e+04\n","Df Residuals:                     990   BIC:                        -5.785e+04\n","Df Model:                           9                                         \n","Covariance Type:            nonrobust                                         \n","===============================================================================\n","                  coef    std err          t      P>|t|      [0.025      0.975]\n","-------------------------------------------------------------------------------\n","Intercept    3.553e-14   1.34e-14      2.649      0.008    9.21e-15    6.18e-14\n","RH              0.3500    1.2e-16   2.91e+15      0.000       0.350       0.350\n","Temperature     1.2000   2.35e-16    5.1e+15      0.000       1.200       1.200\n","Ws              0.5000   3.51e-16   1.42e+15      0.000       0.500       0.500\n","DC              0.8000   6.89e-17   1.16e+16      0.000       0.800       0.800\n","ISI             1.2000      7e-17   1.71e+16      0.000       1.200       1.200\n","BUI          -1.11e-15   7.04e-17    -15.777      0.000   -1.25e-15   -9.72e-16\n","FFMC            0.1500   7.17e-17   2.09e+15      0.000       0.150       0.150\n","Rain         1.318e-15   7.19e-17     18.349      0.000    1.18e-15    1.46e-15\n","DMC         -4.094e-16   6.95e-17     -5.889      0.000   -5.46e-16   -2.73e-16\n","==============================================================================\n","Omnibus:                        3.937   Durbin-Watson:                   1.871\n","Prob(Omnibus):                  0.140   Jarque-Bera (JB):                3.297\n","Skew:                           0.042   Prob(JB):                        0.192\n","Kurtosis:                       2.732   Cond. No.                         915.\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>           <td>FWI</td>       <th>  R-squared:         </th>  <td>   1.000</td> \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   1.000</td> \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>5.307e+31</td>\n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Sun, 08 Oct 2023</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>05:37:37</td>     <th>  Log-Likelihood:    </th>  <td>  28959.</td> \n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td>  1000</td>      <th>  AIC:               </th> <td>-5.790e+04</td>\n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td>   990</td>      <th>  BIC:               </th> <td>-5.785e+04</td>\n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>     9</td>      <th>                     </th>      <td> </td>    \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","       <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>Intercept</th>   <td> 3.553e-14</td> <td> 1.34e-14</td> <td>    2.649</td> <td> 0.008</td> <td> 9.21e-15</td> <td> 6.18e-14</td>\n","</tr>\n","<tr>\n","  <th>RH</th>          <td>    0.3500</td> <td>  1.2e-16</td> <td> 2.91e+15</td> <td> 0.000</td> <td>    0.350</td> <td>    0.350</td>\n","</tr>\n","<tr>\n","  <th>Temperature</th> <td>    1.2000</td> <td> 2.35e-16</td> <td>  5.1e+15</td> <td> 0.000</td> <td>    1.200</td> <td>    1.200</td>\n","</tr>\n","<tr>\n","  <th>Ws</th>          <td>    0.5000</td> <td> 3.51e-16</td> <td> 1.42e+15</td> <td> 0.000</td> <td>    0.500</td> <td>    0.500</td>\n","</tr>\n","<tr>\n","  <th>DC</th>          <td>    0.8000</td> <td> 6.89e-17</td> <td> 1.16e+16</td> <td> 0.000</td> <td>    0.800</td> <td>    0.800</td>\n","</tr>\n","<tr>\n","  <th>ISI</th>         <td>    1.2000</td> <td>    7e-17</td> <td> 1.71e+16</td> <td> 0.000</td> <td>    1.200</td> <td>    1.200</td>\n","</tr>\n","<tr>\n","  <th>BUI</th>         <td> -1.11e-15</td> <td> 7.04e-17</td> <td>  -15.777</td> <td> 0.000</td> <td>-1.25e-15</td> <td>-9.72e-16</td>\n","</tr>\n","<tr>\n","  <th>FFMC</th>        <td>    0.1500</td> <td> 7.17e-17</td> <td> 2.09e+15</td> <td> 0.000</td> <td>    0.150</td> <td>    0.150</td>\n","</tr>\n","<tr>\n","  <th>Rain</th>        <td> 1.318e-15</td> <td> 7.19e-17</td> <td>   18.349</td> <td> 0.000</td> <td> 1.18e-15</td> <td> 1.46e-15</td>\n","</tr>\n","<tr>\n","  <th>DMC</th>         <td>-4.094e-16</td> <td> 6.95e-17</td> <td>   -5.889</td> <td> 0.000</td> <td>-5.46e-16</td> <td>-2.73e-16</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td> 3.937</td> <th>  Durbin-Watson:     </th> <td>   1.871</td>\n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th> <td> 0.140</td> <th>  Jarque-Bera (JB):  </th> <td>   3.297</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>          <td> 0.042</td> <th>  Prob(JB):          </th> <td>   0.192</td>\n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>      <td> 2.732</td> <th>  Cond. No.          </th> <td>    915.</td>\n","</tr>\n","</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."],"text/latex":"\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}    &       FWI        & \\textbf{  R-squared:         } &     1.000   \\\\\n\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &     1.000   \\\\\n\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } & 5.307e+31   \\\\\n\\textbf{Date:}             & Sun, 08 Oct 2023 & \\textbf{  Prob (F-statistic):} &     0.00    \\\\\n\\textbf{Time:}             &     05:37:37     & \\textbf{  Log-Likelihood:    } &    28959.   \\\\\n\\textbf{No. Observations:} &        1000      & \\textbf{  AIC:               } & -5.790e+04  \\\\\n\\textbf{Df Residuals:}     &         990      & \\textbf{  BIC:               } & -5.785e+04  \\\\\n\\textbf{Df Model:}         &           9      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                     & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{Intercept}   &    3.553e-14  &     1.34e-14     &     2.649  &         0.008        &     9.21e-15    &     6.18e-14     \\\\\n\\textbf{RH}          &       0.3500  &      1.2e-16     &  2.91e+15  &         0.000        &        0.350    &        0.350     \\\\\n\\textbf{Temperature} &       1.2000  &     2.35e-16     &   5.1e+15  &         0.000        &        1.200    &        1.200     \\\\\n\\textbf{Ws}          &       0.5000  &     3.51e-16     &  1.42e+15  &         0.000        &        0.500    &        0.500     \\\\\n\\textbf{DC}          &       0.8000  &     6.89e-17     &  1.16e+16  &         0.000        &        0.800    &        0.800     \\\\\n\\textbf{ISI}         &       1.2000  &        7e-17     &  1.71e+16  &         0.000        &        1.200    &        1.200     \\\\\n\\textbf{BUI}         &    -1.11e-15  &     7.04e-17     &   -15.777  &         0.000        &    -1.25e-15    &    -9.72e-16     \\\\\n\\textbf{FFMC}        &       0.1500  &     7.17e-17     &  2.09e+15  &         0.000        &        0.150    &        0.150     \\\\\n\\textbf{Rain}        &    1.318e-15  &     7.19e-17     &    18.349  &         0.000        &     1.18e-15    &     1.46e-15     \\\\\n\\textbf{DMC}         &   -4.094e-16  &     6.95e-17     &    -5.889  &         0.000        &    -5.46e-16    &    -2.73e-16     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       &  3.937 & \\textbf{  Durbin-Watson:     } &    1.871  \\\\\n\\textbf{Prob(Omnibus):} &  0.140 & \\textbf{  Jarque-Bera (JB):  } &    3.297  \\\\\n\\textbf{Skew:}          &  0.042 & \\textbf{  Prob(JB):          } &    0.192  \\\\\n\\textbf{Kurtosis:}      &  2.732 & \\textbf{  Cond. No.          } &     915.  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["#Let's check for MSE if test size is 0.25 from all information\n","X = data[['RH', 'Rain', 'Temperature', 'Ws', 'DC', 'ISI', 'BUI', 'FFMC', 'DMC']]\n","y = data['FWI']\n","\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=1)\n","\n","\n","lm2 = LinearRegression()\n","\n","\n","lm2.fit(X_train, y_train)\n","\n","\n","y_pred = lm2.predict(X_test)\n","\n","\n","print(np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8OeCsSW_D3k9","executionInfo":{"status":"ok","timestamp":1696743459445,"user_tz":-360,"elapsed":365,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"38b92377-c7f1-4d88-b663-c8206d096223"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["2.2052389511638444e-13\n"]}]},{"cell_type":"code","source":["#Building our model and looking prediction and true values\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_absolute_error\n","from sklearn.metrics import r2_score\n","linreg=LinearRegression()\n","linreg.fit(train_features_scaled,train_labels)\n","y_pred=linreg.predict(test_features_scaled)\n","mae=mean_absolute_error(test_labels,y_pred)\n","score=r2_score(test_labels,y_pred)\n","print(\"Mean absolute error: \", mae)\n","print(\"R2 Score: \", score)\n","print(\"Prediction: \", y_pred)\n","print(\"Test labels: \", test_labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"25BynjqI-Mds","executionInfo":{"status":"ok","timestamp":1696743461395,"user_tz":-360,"elapsed":377,"user":{"displayName":"hello there","userId":"07463338358590839984"}},"outputId":"7113bb7d-e995-4bc9-e269-30c1469d73fd"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean absolute error:  4.4906300900038334e-14\n","R2 Score:  1.0\n","Prediction:  [197.481 195.922 100.035 129.018 149.712 146.276 141.984 149.313  84.947\n"," 120.045 160.246 233.666 230.507 188.054 149.387 195.176  99.47  186.416\n"," 201.457 141.706 192.936 123.766 168.528 155.644 198.423 184.297 178.053\n","  83.117 158.041 132.566 170.905 173.609 176.109 193.006 166.454 194.94\n"," 105.602  64.591 227.622  94.515 102.834 237.05  168.361 132.58  138.715\n"," 119.489 157.772  80.802  73.054 155.923 220.476 201.4   245.527 129.392\n"," 149.06  134.205 258.338 187.466 185.589 123.347 165.296  98.49  166.153\n"," 110.371 136.43  149.989 189.668 178.948 146.382 228.155 149.908 135.537\n"," 150.661 206.163 109.159 137.591 187.984 205.532 187.927 177.535 135.741\n"," 185.922 273.484 141.082 258.592 105.725 137.662 205.768 106.317 228.223\n"," 208.283 220.229 204.522 241.83   96.918 234.91  195.877 179.528 131.328\n"," 118.273 153.211  96.119  87.689 125.24  207.326 156.481 201.522 127.06\n"," 107.    149.321 105.807  84.436 195.316 179.622 138.046 125.861  81.388\n"," 113.414  80.876 179.36  196.792 197.108 191.589 150.014  89.538 191.955\n"," 237.77  208.502 189.602 186.88  193.045 217.746  93.404 239.564 205.761\n"," 244.278 144.389 146.966 177.149 144.023 130.15  194.682 236.809 136.08\n"," 113.161 191.946 206.04  251.588 174.18  177.304 223.4   254.039 238.438\n"," 211.506 214.406 236.686 205.047 191.165 198.913 159.085 106.544 217.693\n"," 157.757 178.164 202.014  94.586 206.301 164.437 117.849 216.978 140.184\n"," 192.31  177.856 151.543 139.299 222.844 104.917 182.086 171.115 158.683\n"," 171.326 200.032 191.26  244.957 112.2   112.693 186.201 103.185 169.327\n"," 183.752 195.633 124.167 117.598 175.887 132.95  165.816 127.099 225.404\n"," 241.26  124.458]\n","Test labels:  9      197.480685\n","11     195.921843\n","19     100.034908\n","23     129.017657\n","28     149.712485\n","          ...    \n","962    165.815993\n","966    127.099461\n","976    225.403572\n","980    241.260160\n","983    124.458246\n","Name: FWI, Length: 200, dtype: float64\n"]}]}]}